apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    role: securemongo
  name: securemongo
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      role: securemongo
  serviceName: securemongo
  template:
    metadata:
      creationTimestamp: null
      labels:
        role: securemongo
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - |
          if [ -f /data/db/admin-user.lock ]; then
            mongod --replSet rs0 --clusterAuthMode keyFile --keyFile /etc/secrets-volume/mongodb-keyfile --setParameter authenticationMechanisms=SCRAM-SHA-1 --bind_ip 0.0.0.0;
          else
            mongod --auth --bind_ip 0.0.0.0;
          fi;
        image: mongo
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - |
                if [ ! -f /data/db/admin-user.lock ]; then
                  sleep 5;
                  touch /data/db/admin-user.lock
                  if [ "$HOSTNAME" = "mongo-0" ]; then
                    mongo --eval 'db = db.getSiblingDB("admin"); db.createUser({ user: "admin", pwd: "password", roles: [{ role: "root", db: "admin" }]});';
                  fi;
                  mongod --shutdown;
                fi;
        name: mongo
        ports:
        - containerPort: 27017
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/secrets-volume
          name: mongo-key
          readOnly: true
        - mountPath: /data/db/secure
          name: local-secure-mongo-storage
      - env:
        - name: MONGO_SIDECAR_POD_LABELS
          value: role=mongo,environment=test
        - name: MONGODB_USERNAME
          value: admin
        - name: MONGODB_PASSWORD
          value: password
        - name: MONGODB_DATABASE
          value: admin
        image: cvallance/mongo-k8s-sidecar
        imagePullPolicy: Always
        name: mongo-sidecar
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 10
      volumes:
      - name: mongo-key
        secret:
          defaultMode: 256
          secretName: mongo-key
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
  - metadata:
      annotations:
        volume.beta.kubernetes.io/storage-class: manual
      creationTimestamp: null
      name: local-secure-mongo-storage
    spec:
      accessModes:
        - ReadWriteOnce
        - ReadOnlyMany
      resources:
        requests:
          storage: 1Gi
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  replicas: 0
